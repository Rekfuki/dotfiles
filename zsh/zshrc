export ZSH="${HOME}/.oh-my-zsh"

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

plugins=(
    aws
    colored-man-pages
    docker
    git
    golang
    gradle-completion
    helm
    httpie
    kubectl
    npm
    nvm
    rvm
    terraform
    tmux
    vi-mode
    web-search
    z
    zsh-autosuggestions
    zsh-completions
    zsh-syntax-highlighting

    # fzf-tab should be the last plugin to bind "^I"
    fzf-tab
)

# Set the zsh theme
ZSH_THEME="powerlevel10k/powerlevel10k"

# Load oh-my-zsh
source "${ZSH}/oh-my-zsh.sh"

# User configuration

# Reload the completions
autoload -U compinit && compinit

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# zsh-autosuggestions settings
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=7"

# Make Vi mode transitions faster (KEYTIMEOUT is in hundredths of a second)
export KEYTIMEOUT=1

# Set the default umask
umask 022

# Apply sensisble zsh settings
setopt ALWAYS_TO_END           # full completions move cursor to the end
setopt AUTO_CD                 # `dirname` is equivalent to `cd dirname`
setopt AUTO_PARAM_SLASH        # if completed parameter is a directory, add a trailing slash
setopt AUTO_PUSHD              # `cd` pushes directories to the directory stack
setopt CHASE_LINKS             # Resolve symbolic links to their true values when changing directory
setopt COMPLETE_IN_WORD        # complete from the cursor rather than from the end of the word
setopt C_BASES                 # print hex/oct numbers as 0xFF/077 instead of 16#FF/8#77
setopt EXTENDED_GLOB           # more powerful globbing
setopt EXTENDED_HISTORY        # write timestamps to history
setopt HIST_EXPIRE_DUPS_FIRST  # if history needs to be trimmed, evict dups first
setopt HIST_FIND_NO_DUPS       # don't show dups when searching history
setopt HIST_IGNORE_DUPS        # don't add consecutive dups to history
setopt HIST_IGNORE_SPACE       # don't add commands starting with space to history
setopt HIST_VERIFY             # if a command triggers history expansion, show it instead of running
setopt INTERACTIVE_COMMENTS    # allow comments in command line
setopt MULTIOS                 # allow multiple redirections for the same fd
setopt NO_BG_NICE              # don't nice background jobs
setopt NO_FLOW_CONTROL         # disable start/stop characters in shell editor
setopt PATH_DIRS               # perform path search even on command names with slashes
setopt SHARE_HISTORY           # write and import history on every command
setopt correct                 # Correct typos
unsetopt FLOW_CONTROL          # Disable start/stop characters output (usually assigned to ^S/^Q) in the shell's editor.

# Add more dirs to PATH
if [[ ! "$PATH" == *:.* ]]; then
    export PATH="${PATH}:${HOME}/.bin:."
fi

# Set the system-wide editor
export EDITOR=nvim

# Set XDG_CONFIG_HOME
export XDG_CONFIG_HOME="${HOME}/.config"

# Set the GPG_TTY to the current TTY
export GPG_TTY=$TTY

# OSTYPE specific settings
case "${OSTYPE}" in
    linux*)
        if (( $+commands[setxkbmap] )); then
            setxkbmap -option ctrl:nocaps
            setxkbmap -option altwin:swap_alt_win
        fi
        ;;
    *) ;;
esac

# vi-mode extras
# allow arrow keys to search history in insert mode
bindkey "^[OA" up-line-or-beginning-search
bindkey "^[OB" down-line-or-beginning-search
# allow home keys to search history in normal mode
bindkey -M vicmd "k" up-line-or-beginning-search
bindkey -M vicmd "j" down-line-or-beginning-search

# enable Shift+Tab for autocompletion
bindkey -M menuselect '^[[Z' reverse-menu-complete

# FZF

# The default preview command used by fzf
local preview_cmd='(bat --style=numbers,changes --theme=nord --color=always --pager=never {} || zsh -dfc "setopt extended_glob; echo - \${\${1#*[0-9] }## #}" -- {} | bat --style=plain --theme=nord --color always --pager=never --language zsh) 2>/dev/null'
export FZF_DEFAULT_OPTS="--bind 'ctrl-v:execute(vim {})+abort' --layout=reverse --tiebreak=index --cycle --preview='${preview_cmd}'"
export FZF_DEFAULT_OPTS=${FZF_DEFAULT_OPTS}'
    --color fg:#D8DEE9,bg:#2E3440,hl:#A3BE8C,fg+:#D8DEE9,bg+:#434C5E,hl+:#A3BE8C
    --color pointer:#BF616A,info:#4C566A,spinner:#4C566A,header:#4C566A,prompt:#81A1C1,marker:#EBCB8B
'

# fzf-tab settings

# (experimental, may change in the future)
local extract="
# trim input(what you select)
in=\${\${\"\$(<{f})\"%\$'\0'*}#*\$'\0'}
# get ctxt for current completion(some thing before or after the current word)
local -A ctxt=(\"\${(@ps:\2:)CTXT}\")
"

# The preview command used by fzf-tab (show file or directory contents on completion)
zstyle ':fzf-tab:complete:*:*' extra-opts --preview=$extract'(bat --style=numbers,changes --theme=nord --color=always --pager=never ${~ctxt[hpre]}$in || colorls --color=always --long -A --sort-dirs --git-status ${~ctxt[hpre]}$in) 2>/dev/null'

test -f ~/.fzf.zsh && source ~/.fzf.zsh

# Golang
export GOPATH="${HOME}/go"
if [[ ! "$PATH" == */usr/local/go/bin* ]]; then
    export PATH="${PATH}:/usr/local/go/bin:${GOPATH}/bin"
fi

# Node Version Manager
export NVM_DIR="${HOME}/.nvm"
test -f "${NVM_DIR}/nvm.sh" && source "${NVM_DIR}/nvm.sh"

# Ruby Version Manager
export RVM_DIR="${HOME}/.rvm"
test -f "${RVM_DIR}/scripts/rvm" && source "${RVM_DIR}/scripts/rvm"

# Extras
test -f ~/dotfiles/zsh/extras && source ~/dotfiles/zsh/extras
